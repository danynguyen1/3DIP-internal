import tkinter as tk
from tkinter import messagebox
from datetime import datetime

class FitnessTrackerGUI:
    def __init__(self, root):
        self.root = root
        self.root.title("Fitness Tracker")
        
        self.user_name = ""
        self.workout_program = ""
        self.diet_log = []
        self.training_days = []
        self.workout_details = {
            "Legs": [("Squats", 4, 12), ("Lunges", 3, 15), ("Leg Press", 3, 10), ("Calf Raises", 4, 20)],
            "Chest/Back": [("Bench Press", 4, 10), ("Pull-ups", 3, 8), ("Dumbbell Rows", 3, 12), ("Chest Fly", 3, 15)],
            "Arms/Shoulders": [("Bicep Curls", 3, 12), ("Tricep Dips", 3, 10), ("Shoulder Press", 3, 10), ("Lateral Raises", 3, 15)]
        }

        self.create_widgets()

    def create_widgets(self):
        # User Info Frame
        user_info_frame = tk.Frame(self.root)
        user_info_frame.pack(pady=10)

        tk.Label(user_info_frame, text="Enter your name:").grid(row=0, column=0)
        self.name_entry = tk.Entry(user_info_frame)
        self.name_entry.grid(row=0, column=1)

        tk.Button(user_info_frame, text="Set Name", command=self.set_user_name).grid(row=0, column=2, padx=10)

        # Workout Program Frame
        workout_frame = tk.Frame(self.root)
        workout_frame.pack(pady=10)

        tk.Label(workout_frame, text="Select a workout program:").grid(row=0, column=0)
        self.program_var = tk.StringVar(value="Legs")
        program_options = ["Legs", "Chest/Back", "Arms/Shoulders"]
        self.program_menu = tk.OptionMenu(workout_frame, self.program_var, *program_options)
        self.program_menu.grid(row=0, column=1)

        tk.Button(workout_frame, text="Select Program", command=self.select_workout_program).grid(row=0, column=2, padx=10)

        # Buttons Frame
        buttons_frame = tk.Frame(self.root)
        buttons_frame.pack(pady=10)

        tk.Button(buttons_frame, text="Track Diet", command=self.track_diet).grid(row=0, column=0, padx=5)
        tk.Button(buttons_frame, text="Track Training Day", command=self.track_training_day).grid(row=0, column=1, padx=5)
        tk.Button(buttons_frame, text="Show Summary", command=self.show_summary).grid(row=0, column=2, padx=5)

        tk.Button(buttons_frame, text="Exit", command=self.root.quit).grid(row=0, column=3, padx=5)

    def set_user_name(self):
        self.user_name = self.name_entry.get()
        if self.user_name:
            messagebox.showinfo("Info", f"Welcome, {self.user_name}!")
        else:
            messagebox.showwarning("Warning", "Please enter your name.")

    def select_workout_program(self):
        self.workout_program = self.program_var.get()
        if self.workout_program:
            self.show_workout_details()
        else:
            messagebox.showwarning("Warning", "Please select a workout program.")

    def show_workout_details(self):
        details = f"Exercises for {self.workout_program} program:\n"
        for exercise, sets, reps in self.workout_details[self.workout_program]:
            details += f"- {exercise}: {sets} sets of {reps} reps\n"
        messagebox.showinfo("Workout Details", details)

    def track_diet(self):
        diet_window = tk.Toplevel(self.root)
        diet_window.title("Track Diet")

        tk.Label(diet_window, text="Enter the details of your meal:").pack(pady=10)
        self.diet_entry = tk.Entry(diet_window, width=40)
        self.diet_entry.pack(pady=10)

        tk.Button(diet_window, text="Add Meal", command=self.add_meal).pack(pady=10)

    def add_meal(self):
        meal = self.diet_entry.get()
        if meal:
            self.diet_log.append(meal)
            messagebox.showinfo("Info", "Meal added to your diet log.")
        else:
            messagebox.showwarning("Warning", "Please enter meal details.")

    def track_training_day(self):
        today = datetime.today().strftime('%Y-%m-%d')
        self.training_days.append(today)
        messagebox.showinfo("Info", f"Training day {today} added.")

    def show_summary(self):
        summary = f"--- Summary ---\n"
        summary += f"Name: {self.user_name}\n"
        summary += f"Workout Program: {self.workout_program}\n\n"
        summary += "Diet Log:\n"
        for meal in self.diet_log:
            summary += f"- {meal}\n"
        summary += "\nTraining Days:\n"
        for day in self.training_days:
            summary += f"- {day}\n"

        messagebox.showinfo("Summary", summary)

if __name__ == "__main__":
    root = tk.Tk()
    app = FitnessTrackerGUI(root)
    root.mainloop()


